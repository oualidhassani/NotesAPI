{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/NotesApp.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"app\": \"NotesApp-module__8etKFG__app\",\n  \"cancelButton\": \"NotesApp-module__8etKFG__cancelButton\",\n  \"closeButton\": \"NotesApp-module__8etKFG__closeButton\",\n  \"connected\": \"NotesApp-module__8etKFG__connected\",\n  \"connectionError\": \"NotesApp-module__8etKFG__connectionError\",\n  \"createButton\": \"NotesApp-module__8etKFG__createButton\",\n  \"createButtonContainer\": \"NotesApp-module__8etKFG__createButtonContainer\",\n  \"deleteButton\": \"NotesApp-module__8etKFG__deleteButton\",\n  \"disconnected\": \"NotesApp-module__8etKFG__disconnected\",\n  \"editButton\": \"NotesApp-module__8etKFG__editButton\",\n  \"emptyMainContent\": \"NotesApp-module__8etKFG__emptyMainContent\",\n  \"emptyMainState\": \"NotesApp-module__8etKFG__emptyMainState\",\n  \"emptyState\": \"NotesApp-module__8etKFG__emptyState\",\n  \"error\": \"NotesApp-module__8etKFG__error\",\n  \"loading\": \"NotesApp-module__8etKFG__loading\",\n  \"loadingScreen\": \"NotesApp-module__8etKFG__loadingScreen\",\n  \"mainContent\": \"NotesApp-module__8etKFG__mainContent\",\n  \"mainLayout\": \"NotesApp-module__8etKFG__mainLayout\",\n  \"modal\": \"NotesApp-module__8etKFG__modal\",\n  \"modalBody\": \"NotesApp-module__8etKFG__modalBody\",\n  \"modalContent\": \"NotesApp-module__8etKFG__modalContent\",\n  \"modalFooter\": \"NotesApp-module__8etKFG__modalFooter\",\n  \"modalHeader\": \"NotesApp-module__8etKFG__modalHeader\",\n  \"modalInput\": \"NotesApp-module__8etKFG__modalInput\",\n  \"modalTextarea\": \"NotesApp-module__8etKFG__modalTextarea\",\n  \"noteActions\": \"NotesApp-module__8etKFG__noteActions\",\n  \"noteCard\": \"NotesApp-module__8etKFG__noteCard\",\n  \"noteCardSelected\": \"NotesApp-module__8etKFG__noteCardSelected\",\n  \"noteContent\": \"NotesApp-module__8etKFG__noteContent\",\n  \"noteHeader\": \"NotesApp-module__8etKFG__noteHeader\",\n  \"noteInfo\": \"NotesApp-module__8etKFG__noteInfo\",\n  \"noteMainTitle\": \"NotesApp-module__8etKFG__noteMainTitle\",\n  \"notePreview\": \"NotesApp-module__8etKFG__notePreview\",\n  \"noteText\": \"NotesApp-module__8etKFG__noteText\",\n  \"noteTitle\": \"NotesApp-module__8etKFG__noteTitle\",\n  \"notesList\": \"NotesApp-module__8etKFG__notesList\",\n  \"retryButton\": \"NotesApp-module__8etKFG__retryButton\",\n  \"saveButton\": \"NotesApp-module__8etKFG__saveButton\",\n  \"searchContainer\": \"NotesApp-module__8etKFG__searchContainer\",\n  \"searchInput\": \"NotesApp-module__8etKFG__searchInput\",\n  \"sidebar\": \"NotesApp-module__8etKFG__sidebar\",\n  \"sidebarHeader\": \"NotesApp-module__8etKFG__sidebarHeader\",\n  \"spin\": \"NotesApp-module__8etKFG__spin\",\n  \"spinner\": \"NotesApp-module__8etKFG__spinner\",\n  \"statusBanner\": \"NotesApp-module__8etKFG__statusBanner\",\n  \"title\": \"NotesApp-module__8etKFG__title\",\n  \"troubleshooting\": \"NotesApp-module__8etKFG__troubleshooting\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file:///Users/nassirinassiri/Documents/workspace-spring-tool-suite-4-4.28.0.RELEASE/notesapis/notes-frontend/src/components/NotesApp.tsx"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useState } from \"react\"\nimport axios from \"axios\"\nimport styles from \"./NotesApp.module.css\"\n\ninterface Note {\n  id: number\n  title: string\n  content: string\n}\n\nexport default function NotesApp() {\n  const [notes, setNotes] = useState<Note[]>([])\n  const [selectedNote, setSelectedNote] = useState<Note | null>(null)\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [isLoading, setIsLoading] = useState(true)\n  const [isCreating, setIsCreating] = useState(false)\n  const [isEditing, setIsEditing] = useState(false)\n  const [editingNote, setEditingNote] = useState<Note | null>(null)\n  const [newNote, setNewNote] = useState({ title: \"\", content: \"\" })\n  const [error, setError] = useState<string | null>(null)\n  const [isBackendConnected, setIsBackendConnected] = useState(false)\n  const [isMounted, setIsMounted] = useState(false)\n\n  // Ensure component is mounted before rendering\n  useEffect(() => {\n    setIsMounted(true)\n  }, [])\n\n  useEffect(() => {\n    if (isMounted) {\n      fetchNotes()\n    }\n  }, [isMounted])\n\n  const fetchNotes = async () => {\n    try {\n      setIsLoading(true)\n      setError(null)\n\n      // Try to connect to Spring Boot backend\n      const response = await axios.get(\"http://localhost:8080/api/notes\", {\n        timeout: 5000,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n\n      const notesData = Array.isArray(response.data) ? response.data : []\n      setNotes(notesData)\n      setIsBackendConnected(true)\n\n      console.log(\"‚úÖ Connected to Spring Boot backend successfully!\")\n      console.log(\"üìù Loaded notes:\", notesData)\n    } catch (error: any) {\n      console.error(\"‚ùå Error fetching notes:\", error)\n      setIsBackendConnected(false)\n\n      // Check if it's a network error (backend not running)\n      if (error.code === \"ECONNABORTED\" || error.message === \"Network Error\" || !error.response) {\n        setError(\"Spring Boot backend not running. Using demo mode.\")\n\n        // Load sample data for demo purposes\n        const sampleNotes = [\n          {\n            id: 1,\n            title: \"üöÄ Welcome to Notes App\",\n            content: `This is a sample note showing in DEMO MODE.\n\nYour Spring Boot backend is not running. Here's how to fix it:\n\n1. Open terminal in your Spring Boot project folder\n2. Run: ./mvnw spring-boot:run\n3. Wait for \"Started NotesapisApplication\" message\n4. Refresh this page\n\nThe backend should run on: http://localhost:8080`,\n          },\n          {\n            id: 2,\n            title: \"üìã Backend Setup Checklist\",\n            content: `Make sure you have:\n\n‚úÖ Added NoteController.java\n‚úÖ Spring Boot app running on port 8080\n‚úÖ CORS configured for localhost:3000\n‚úÖ All dependencies installed\n\nAPI Endpoints needed:\n‚Ä¢ GET /api/notes\n‚Ä¢ POST /api/notes  \n‚Ä¢ PUT /api/notes/{id}\n‚Ä¢ DELETE /api/notes/{id}`,\n          },\n          {\n            id: 3,\n            title: \"üéØ Demo Features\",\n            content: `This demo shows all features:\n\n‚úÖ Create new notes\n‚úÖ Edit existing notes  \n‚úÖ Delete notes\n‚úÖ Search functionality\n‚úÖ Responsive design\n‚úÖ Error handling\n\nOnce your backend is running, all operations will persist to your database!`,\n          },\n        ]\n\n        setNotes(sampleNotes)\n        console.log(\"üîÑ Loaded demo data since backend is not available\")\n      } else {\n        setError(\"Failed to connect to backend\")\n        setNotes([])\n      }\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const createNote = async () => {\n    if (!newNote.title.trim() || !newNote.content.trim()) {\n      alert(\"Please fill in both title and content.\")\n      return\n    }\n\n    if (!isBackendConnected) {\n      // Demo mode - create note locally\n      const demoNote = {\n        id: Date.now(),\n        title: newNote.title,\n        content: newNote.content,\n      }\n      setNotes((prevNotes) => [demoNote, ...prevNotes])\n      setNewNote({ title: \"\", content: \"\" })\n      setIsCreating(false)\n      alert(\"‚úÖ Note created in demo mode! Start your Spring Boot backend to persist data.\")\n      return\n    }\n\n    try {\n      const response = await axios.post(\"http://localhost:8080/api/notes\", newNote, {\n        timeout: 5000,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      const createdNote = response.data\n      setNotes((prevNotes) => [createdNote, ...prevNotes])\n      setNewNote({ title: \"\", content: \"\" })\n      setIsCreating(false)\n      alert(\"‚úÖ Note created successfully!\")\n    } catch (error) {\n      console.error(\"Error creating note:\", error)\n      alert(\"‚ùå Failed to create note. Check if backend is running.\")\n    }\n  }\n\n  const updateNote = async () => {\n    if (!editingNote || !editingNote.title.trim() || !editingNote.content.trim()) {\n      alert(\"Please fill in both title and content.\")\n      return\n    }\n\n    if (!isBackendConnected) {\n      // Demo mode - update note locally\n      const updatedNote = { ...editingNote }\n      setNotes((prevNotes) => prevNotes.map((note) => (note.id === editingNote.id ? updatedNote : note)))\n      if (selectedNote?.id === editingNote.id) {\n        setSelectedNote(updatedNote)\n      }\n      setEditingNote(null)\n      setIsEditing(false)\n      alert(\"‚úÖ Note updated in demo mode! Start your Spring Boot backend to persist changes.\")\n      return\n    }\n\n    try {\n      const response = await axios.put(`http://localhost:8080/api/notes/${editingNote.id}`, editingNote, {\n        timeout: 5000,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      const updatedNote = response.data\n      setNotes((prevNotes) => prevNotes.map((note) => (note.id === editingNote.id ? updatedNote : note)))\n      if (selectedNote?.id === editingNote.id) {\n        setSelectedNote(updatedNote)\n      }\n      setEditingNote(null)\n      setIsEditing(false)\n      alert(\"‚úÖ Note updated successfully!\")\n    } catch (error) {\n      console.error(\"Error updating note:\", error)\n      alert(\"‚ùå Failed to update note. Check if backend is running.\")\n    }\n  }\n\n  const deleteNote = async (noteId: number) => {\n    if (!confirm(\"Are you sure you want to delete this note?\")) {\n      return\n    }\n\n    if (!isBackendConnected) {\n      // Demo mode - delete note locally\n      setNotes((prevNotes) => prevNotes.filter((note) => note.id !== noteId))\n      if (selectedNote?.id === noteId) {\n        setSelectedNote(null)\n      }\n      alert(\"‚úÖ Note deleted in demo mode! Start your Spring Boot backend to persist changes.\")\n      return\n    }\n\n    try {\n      await axios.delete(`http://localhost:8080/api/notes/${noteId}`, {\n        timeout: 5000,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      setNotes((prevNotes) => prevNotes.filter((note) => note.id !== noteId))\n      if (selectedNote?.id === noteId) {\n        setSelectedNote(null)\n      }\n      alert(\"‚úÖ Note deleted successfully!\")\n    } catch (error) {\n      console.error(\"Error deleting note:\", error)\n      alert(\"‚ùå Failed to delete note. Check if backend is running.\")\n    }\n  }\n\n  const filteredNotes = Array.isArray(notes)\n    ? notes.filter(\n        (note) =>\n          note.title?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          note.content?.toLowerCase().includes(searchTerm.toLowerCase()),\n      )\n    : []\n\n  // Don't render until component is mounted (prevents hydration errors)\n  if (!isMounted) {\n    return (\n      <div className={styles.loadingScreen}>\n        <div className={styles.spinner}></div>\n        <span>Loading Notes App...</span>\n      </div>\n    )\n  }\n\n  return (\n    <div className={styles.app}>\n      {/* Connection Status Banner */}\n      <div className={`${styles.statusBanner} ${isBackendConnected ? styles.connected : styles.disconnected}`}>\n        {isBackendConnected ? (\n          <span>üü¢ Connected to Spring Boot backend</span>\n        ) : (\n          <span>üî¥ Demo Mode - Spring Boot backend not running</span>\n        )}\n      </div>\n\n      <div className={styles.mainLayout}>\n        {/* Sidebar */}\n        <div className={styles.sidebar}>\n          <div className={styles.sidebarHeader}>\n            <h1 className={styles.title}>üìù My Notes</h1>\n            <div className={styles.searchContainer}>\n              <input\n                type=\"text\"\n                placeholder=\"Search notes...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className={styles.searchInput}\n              />\n            </div>\n          </div>\n\n          <div className={styles.createButtonContainer}>\n            <button onClick={() => setIsCreating(true)} className={styles.createButton}>\n              ‚ûï New Note\n            </button>\n          </div>\n\n          <div className={styles.notesList}>\n            {isLoading ? (\n              <div className={styles.loading}>\n                <div className={styles.spinner}></div>\n                <span>Loading notes...</span>\n              </div>\n            ) : error ? (\n              <div className={styles.error}>\n                <p>‚ö†Ô∏è {error}</p>\n                <div className={styles.troubleshooting}>\n                  <h4>üîß Troubleshooting:</h4>\n                  <ol>\n                    <li>Open terminal in Spring Boot project</li>\n                    <li>\n                      Run: <code>./mvnw spring-boot:run</code>\n                    </li>\n                    <li>Wait for \"Started NotesapisApplication\"</li>\n                    <li>Click \"Try Again\" below</li>\n                  </ol>\n                </div>\n                <button onClick={fetchNotes} className={styles.retryButton}>\n                  üîÑ Try Again\n                </button>\n              </div>\n            ) : filteredNotes.length === 0 ? (\n              <div className={styles.emptyState}>\n                <p>{searchTerm ? \"No matching notes\" : \"No notes found\"}</p>\n                <small>{searchTerm ? \"Try adjusting your search\" : \"Create your first note to get started\"}</small>\n              </div>\n            ) : (\n              filteredNotes.map((note) => (\n                <div\n                  key={note.id}\n                  className={`${styles.noteCard} ${selectedNote?.id === note.id ? styles.noteCardSelected : \"\"}`}\n                  onClick={() => setSelectedNote(note)}\n                >\n                  <h3 className={styles.noteTitle}>{note.title || \"Untitled\"}</h3>\n                  <p className={styles.notePreview}>{note.content || \"No content\"}</p>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n\n        {/* Main Content */}\n        <div className={styles.mainContent}>\n          {selectedNote ? (\n            <>\n              <div className={styles.noteHeader}>\n                <div className={styles.noteInfo}>\n                  <h2 className={styles.noteMainTitle}>{selectedNote.title || \"Untitled\"}</h2>\n                </div>\n                <div className={styles.noteActions}>\n                  <button\n                    onClick={() => {\n                      setEditingNote({ ...selectedNote })\n                      setIsEditing(true)\n                    }}\n                    className={styles.editButton}\n                  >\n                    ‚úèÔ∏è Edit\n                  </button>\n                  <button onClick={() => deleteNote(selectedNote.id)} className={styles.deleteButton}>\n                    üóëÔ∏è Delete\n                  </button>\n                </div>\n              </div>\n              <div className={styles.noteContent}>\n                <div className={styles.noteText}>{selectedNote.content || \"No content available\"}</div>\n              </div>\n            </>\n          ) : (\n            <div className={styles.emptyMainContent}>\n              <div className={styles.emptyMainState}>\n                <h3>üìÑ No note selected</h3>\n                <p>Choose a note from the sidebar to view its content</p>\n                {error && (\n                  <div className={styles.connectionError}>\n                    <h4>üîß Backend Setup Required:</h4>\n                    <p>1. Open terminal in your Spring Boot project</p>\n                    <p>\n                      2. Run: <code>./mvnw spring-boot:run</code>\n                    </p>\n                    <p>3. Wait for \"Started NotesapisApplication\"</p>\n                    <p>4. Refresh this page</p>\n                    <button onClick={fetchNotes} className={styles.retryButton}>\n                      üîÑ Retry Connection\n                    </button>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Create Note Modal */}\n      {isCreating && (\n        <div className={styles.modal}>\n          <div className={styles.modalContent}>\n            <div className={styles.modalHeader}>\n              <h3>Create New Note {!isBackendConnected && \"(Demo Mode)\"}</h3>\n              <button onClick={() => setIsCreating(false)} className={styles.closeButton}>\n                ‚úï\n              </button>\n            </div>\n            <div className={styles.modalBody}>\n              <input\n                type=\"text\"\n                placeholder=\"Note title...\"\n                value={newNote.title}\n                onChange={(e) => setNewNote({ ...newNote, title: e.target.value })}\n                className={styles.modalInput}\n              />\n              <textarea\n                placeholder=\"Write your note content here...\"\n                value={newNote.content}\n                onChange={(e) => setNewNote({ ...newNote, content: e.target.value })}\n                rows={6}\n                className={styles.modalTextarea}\n              />\n            </div>\n            <div className={styles.modalFooter}>\n              <button onClick={() => setIsCreating(false)} className={styles.cancelButton}>\n                Cancel\n              </button>\n              <button onClick={createNote} className={styles.saveButton}>\n                üíæ Create Note\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Edit Note Modal */}\n      {isEditing && editingNote && (\n        <div className={styles.modal}>\n          <div className={styles.modalContent}>\n            <div className={styles.modalHeader}>\n              <h3>Edit Note {!isBackendConnected && \"(Demo Mode)\"}</h3>\n              <button onClick={() => setIsEditing(false)} className={styles.closeButton}>\n                ‚úï\n              </button>\n            </div>\n            <div className={styles.modalBody}>\n              <input\n                type=\"text\"\n                placeholder=\"Note title...\"\n                value={editingNote.title}\n                onChange={(e) => setEditingNote({ ...editingNote, title: e.target.value })}\n                className={styles.modalInput}\n              />\n              <textarea\n                placeholder=\"Write your note content here...\"\n                value={editingNote.content}\n                onChange={(e) => setEditingNote({ ...editingNote, content: e.target.value })}\n                rows={12}\n                className={styles.modalTextarea}\n              />\n            </div>\n            <div className={styles.modalFooter}>\n              <button onClick={() => setIsEditing(false)} className={styles.cancelButton}>\n                Cancel\n              </button>\n              <button onClick={updateNote} className={styles.saveButton}>\n                üíæ Save Changes\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1076, "column": 0}, "map": {"version":3,"sources":["file:///Users/nassirinassiri/Documents/workspace-spring-tool-suite-4-4.28.0.RELEASE/notesapis/notes-frontend/src/app/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { Suspense } from \"react\"\nimport NotesApp from \"../components/NotesApp\"\n\nfunction LoadingFallback() {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100vh\",\n        backgroundColor: \"#f8fafc\",\n        color: \"#64748b\",\n        fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", sans-serif',\n      }}\n    >\n      <div\n        style={{\n          width: \"24px\",\n          height: \"24px\",\n          border: \"2px solid #e2e8f0\",\n          borderTop: \"2px solid #3b82f6\",\n          borderRadius: \"50%\",\n          animation: \"spin 1s linear infinite\",\n          marginBottom: \"8px\",\n        }}\n      ></div>\n      <span>Loading Notes App...</span>\n    </div>\n  )\n}\n\nexport default function Page() {\n  return (\n    <Suspense fallback={<LoadingFallback />}>\n      <NotesApp />\n    </Suspense>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKA,SAAS;IACP,qBACE,8OAAC;QACC,OAAO;YACL,SAAS;YACT,eAAe;YACf,YAAY;YACZ,gBAAgB;YAChB,QAAQ;YACR,iBAAiB;YACjB,OAAO;YACP,YAAY;QACd;;0BAEA,8OAAC;gBACC,OAAO;oBACL,OAAO;oBACP,QAAQ;oBACR,QAAQ;oBACR,WAAW;oBACX,cAAc;oBACd,WAAW;oBACX,cAAc;gBAChB;;;;;;0BAEF,8OAAC;0BAAK;;;;;;;;;;;;AAGZ;AAEe,SAAS;IACtB,qBACE,8OAAC,qMAAA,CAAA,WAAQ;QAAC,wBAAU,8OAAC;;;;;kBACnB,cAAA,8OAAC,8HAAA,CAAA,UAAQ;;;;;;;;;;AAGf","debugId":null}}]
}